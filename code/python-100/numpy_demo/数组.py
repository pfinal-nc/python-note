# -*- coding: utf-8 -*-
# @Time    : 2023/10/25 15:43
# @Author  : PFinal南丞 <lampxiezi@163.com
# @File    : 数组.py
# @Software: PyCharm
import numpy as np

# # 创建 rank1 数组
# arr = np.array([1, 2, 3, 4, 5])
# print(arr)
#
# arr = np.array([
#     [1, 2, 3],
#     [2, 3, 4]
# ])
# print(arr)
#
# # 从元组创建数组
# arr = np.array([1, 3, 2])
# print(arr)

# 访问数组索引
# 在 numpy 数组中, 索引或访问数组索引可以通过多种方式完成. 要打印数组的范围, 需要进行切片. 数组切片是在新数组中定义一个范围, 该数组用于打印原始数组中的一系列元素.
# 由于切片数组包含原始数组的一系列元素,因此在切片数组的帮助下修改原始数组内容

# 初始数组
# arr = np.array([[-1, 2, 0, 4], [4, -0.5, 6, 0], [2.6, 0, 7, 8], [3, -7, 4, 2.0]])
# print(arr)
#
# # 使用切片方法打印一系列数组
# sliced_arr = arr[:2, ::2]
# print(sliced_arr)
#
# # 以特定索引打印元素
# index_arr = arr[[1, 1, 0, 3], [3, 2, 1, 0]]
# print(index_arr)

# 基本数组操作
# 在numpy 中 数组允许对特定数组或数组组合执行广泛的操作. 这些运算包括一些基本的数学运算以及一元和二元运算

# 定义数组 1
# a = np.array([[2, 1],
#               [3, 4]])
#
# # 定义数组 2
# b = np.array([[4, 3],
#               [2, 1]])
#
# # 每个元素加1
# print(a + 1)
#
# # 从每个元素中减去 2
# print(b - 2)
#
# # 数组元素的总和执行一元运算
# print(a.sum())
# print("\nArray sum:\n", a + b)

######################################## ########################################

# numpy 中的n维数组(ndarray)

# arr = np.array([[1, 2, 3], [4, 5, 6]])
# # arr 对象的打印类型
# print(type(arr))
#
# # 打印数组维度(轴)
# print(arr.ndim)
#
# # 阵列的打印形状
# print(arr.shape) # 二维 3个元素
#
# # 数组的打印大小()
# print(arr.size)
#
# # 打印数组中元素的类型
# print(arr.dtype)
#
######################################## ########################################

# # 从浮点类型的列表创建数组
# a = np.array([[1, 2, 4], [5, 8, 7]], dtype='float')
# print(a)
#
# # 从元组创建数组
# b = np.array([1, 3, 2])
# print(b)
#
# # 创建一个全为零的 3x4数组
# c = np.zeros((3, 4))
# print(c)
#
# # 创建一个复杂类型的常量值数组
# d = np.full((3, 3), 6, dtype='complex')
# print(d)
#

################################################################

# 数组索引
# 切片: python 中的列表一样 numpy 数组可以切片。由于数组可以是多维的,因此需要为数组的每个维度指定一个切片
# 整数数组索引: 在此方法中，传递列表以对每个维度进行索引。完成对应元素的一对一映射以构造一个新的任意数组。
# 布尔数组索引： 从数组中选择满足某些条件的元素时使用此方法。

# 一个示例数组
arr = np.array([[-1, 2, 0, 4],
                [4, -0.5, 6, 0],
                [2.6, 0, 7, 8],
                [3, -7, 4, 2.0]])

# 切片数组
temp = arr[:2, ::2]
print(temp)

# 整数数组索引示例
temp = arr[[0, 1, 2, 3], [3, 2, 1, 0]]
print(temp)

# 布尔数组索引示例
cond = arr > 0  # cond is a boolean array
temp = arr[cond]
print(temp)
